# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4 # 깃 액션에서 라이브러리로 만들어져 있는 코드, 플러그인 임, 깃허브 클론 작업
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
        chmod +x ./mvnw
        ./mvnw package
    - name: SSH Key permissions
      run: |
        mkdir -p ~/.ssh
        echo "${{secrets.SERVER_SSH_KEY}}" > ~/.ssh/id_rsa # 환경설정 변수명 SERVER_SSH_KEY <-- 이건 자유
        chmod 600 ~/.ssh/id_rsa
    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{secrets.SERVER_SSH_KEY}}
    - name: Add Host
      run: |
        ssh-keyscan -t ed25519 ec2-13-125-1-211.ap-northeast-2.compute.amazonaws.com >> ~/.ssh/known_hosts
    - name: Deploy to Server # 운영서버에 /home/ubuntu 폴더에 빌드가 완료된 jar 파일을 복사
      run: scp target/*.jar ubuntu@ec2-13-125-1-211.ap-northeast-2.compute.amazonaws.com:~/
    - name: Run SSH Commands
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@ec2-13-125-1-211.ap-northeast-2.compute.amazonaws.com << 'EOF'
        pkill -f 'java -jar' || true
        nohup java -jar ~/*.jar > log.txt 2>&1 &
        EOF
      









        

   
